{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.02c7f806.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n  <nav className={`navbar navbar-expand-lg nvabar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n    <a  className={`navbar-brand nav-link text-${props.mode==='light'?'dark':'light'}`} href=\"#\">{props.title}</a>\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    {/* <a className=\"navbar-brand\" href=\"/\">{props.title}</a> */}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a  className={`nav-link active text-${props.mode==='light'?'dark':'light'}`} aria-current=\"page\" href=\"#\">Home</a>\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a> */}\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className={`nav-link text-${props.mode==='light'?'dark':'light'}`} to=\"/about\">{props.aboutText}</Link> */}\r\n            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n          </li>\r\n        </ul>\r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n        {/* <div className={`form-check form-switch mx-5 text-${props.mode==='light'?'black':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMod1} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable  Mode</label>\r\n        </div> */}\r\n\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n        \r\n    \r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n  \r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps= {\r\n    title:'Set title here',\r\n    aboutText: 'About'\r\n}\r\n\r\n"," import React, {useState} from 'react'\r\n \r\n export default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n      console.log(\"uppercase was ckicked\"+ text);\r\n      let newText = text.toUpperCase();\r\n      setText(newText);\r\n      props.showAlert(\"converted to uppercase\", \"success\")\r\n    \r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n      console.log(\"uppercase was ckicked\"+ text);\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"converted to lowercase\", \"success\");\r\n    \r\n    }\r\n\r\n    const handleOnchange =(event)=>{\r\n      console.log(\"On change\");\r\n      setText(event.target.value);\r\n\r\n    }\r\n    const handlCopy =() =>{\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"copied to clipboard\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = ( )=> {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Removed Extra Spaces\", \"success\");\r\n      \r\n    }\r\n    const [text, setText] = useState('Enter text here2');\r\n   return (\r\n    <>\r\n     <div className='container' style={{color:props.mode==='dark'?'white':'#0e2f4c'}}>\r\n        <h1>{props.heading}</h1>\r\n         <div className=\"mb-3\">\r\n           \r\n           <textarea className=\"form-control\" value = {text} onChange={handleOnchange} style={{backgroundColor:props.mode==='dark'?'grey':'light',color:props.mode==='dark'?'white':'#0e2f4c'}} id=\"myBox\" rows=\"8\"></textarea>\r\n         </div>\r\n         <button className=\"btn btn-primary mx-3\" onClick={handleUpClick}>Convert to uppercase</button>\r\n         <button className=\"btn btn-primary mx-3\" onClick={handleLoClick}>Convert to lowercase</button>\r\n         <button className=\"btn btn-primary mx-3\" onClick={handlCopy}>Copy text</button>\r\n         <button className=\"btn btn-primary\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n     </div>\r\n     <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#0e2f4c'}} >\r\n     <h1> Your text summary</h1>\r\n     <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n     <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n     <h2>Preview</h2>\r\n     <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n     </div>\r\n\r\n     </>\r\n   )\r\n }\r\n ","import React from 'react'\r\n\r\nexport default function Alert(props ) {\r\n  const capitalize = (word)=>{\r\n    const lower =word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+ lower.slice(1)\r\n  }\r\n\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}:{props.alert.msg}</strong> \r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n    </div> \r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from 'react';\n// import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n\n\n  }\n  // const toggleMode1 = () => {\n  //   if (mode === 'light') {\n  //     setMode('black')\n  //     document.body.style.backgroundColor = '#6769a9';\n  //     showAlert(\"Dark mode has been enabled\", \"success\");\n  //   }\n  //   else {\n  //     setMode('light')\n  //     document.body.style.backgroundColor = 'white';\n  //     showAlert(\"light mode has been enabled\", \"success\");\n  //   }\n  // }\n\n\n  const toggleMode = () => {\n    if (mode === 'light') \n    {\n      \n      setMode('dark')\n      document.body.style.backgroundColor = '#0e2f4c';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  }\n\n  \n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n    {/* <Navbar/> */}\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch> */}\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route> */}\n    {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    </> \n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}